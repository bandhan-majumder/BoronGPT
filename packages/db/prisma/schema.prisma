generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  refresh_token_expires_in Int?
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  admin         Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  subscriptions Subscription[]
}

model Subscription {
  id               String           @id @unique @default(cuid())
  userId           String 
  subscriptionType SubscriptionType
  razorpayOrderId  String           @unique
  razorpayPaymentId String?         
  amount           Int
  status           PaymentStatus
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  expiresAt        DateTime?        
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([status])
}

enum PaymentStatus {
  PENDING
  FAILED
  COMPLETED
  REFUNDED  
}

model Pricing {
  id           String           @id @default(cuid())
  subscription SubscriptionType @unique
  amount       Int
  currency     String           @default("INR")
  isActive     Boolean          @default(true)
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
}

enum SubscriptionType {
  MonthlyIndividual
  MonthlyTeam        
  MonthlyEnterprise  
}